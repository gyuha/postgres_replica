services:
  primary:
    image: postgres:15
    container_name: postgres_primary
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_REPLICATION_USER: ${POSTGRES_REPLICATION_USER}
      POSTGRES_REPLICATION_PASSWORD: ${POSTGRES_REPLICATION_PASSWORD}
    ports:
      - "${POSTGRES_PORT_PRIMARY}:5432"
    volumes:
      - ./data/primary:/var/lib/postgresql/data
      - ./config/primary/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
      - ./config/primary/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
      - ./scripts/primary/init.sh:/docker-entrypoint-initdb.d/init.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  replica:
    image: postgres:15
    container_name: postgres_replica
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_REPLICATION_USER: ${POSTGRES_REPLICATION_USER}
      POSTGRES_REPLICATION_PASSWORD: ${POSTGRES_REPLICATION_PASSWORD}
    ports:
      - "${POSTGRES_PORT_REPLICA}:5432"
    volumes:
      - ./data/replica:/var/lib/postgresql/data
      - ./config/replica/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
      - ./config/replica/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
      - ./scripts/replica/init.sh:/docker-entrypoint-initdb.d/init.sh
    depends_on:
      primary:
        condition: service_healthy

networks:
  default:
    driver: bridge 